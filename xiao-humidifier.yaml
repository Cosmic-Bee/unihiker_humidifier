esphome:
  name: xiao-humidifier
  friendly_name: Xiao Humidifier

# Uses the Xiao ESP32S3
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# I have GPIO 7 which is pin D8 from the pinout as the humidifier signal
# See https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/2.jpg
switch:
  - platform: gpio
    pin: GPIO7
    name: "Humidifier"

# DHT sensor on GPIO1 / pin D0
sensor:
  - platform: dht
    pin: GPIO1
    temperature:
      name: "Xiao Temperature"
    humidity:
      name: "Xiao Humidity"
      id: xiao_humidity
    update_interval: 60s

# Uses CLK and DIO pins GPIO2 / D1 and GPIO3 / D2
display:
  - platform: tm1637
    id: tm1637_display
    clk_pin: GPIO2
    dio_pin: GPIO3
    inverted: true
    length: 4
    # The logic here grabs the humidity using the xiao_humidity
    # name set above in the sensor: humidity: id: section
    # It then converts it to an integer and displays it
    lambda: |-
      if (id(xiao_humidity).has_state()) {
        char str[5];
        int humidity = static_cast<int>(id(xiao_humidity).state);
        snprintf(str, sizeof(str), "%02d", humidity);
        it.print(str);
      } else {
        it.print("----");
      }


logger:

api:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# This sets up the web server to allow the Unihiker access
# on the local wifi. I've setup an http basic username and
# password to add some level of security on the local network.
web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password
